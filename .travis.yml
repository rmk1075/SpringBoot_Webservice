language: java
jdk:
  - openjdk11

# only master branch에 push 되었을때 수행하도록 한다.
branches:
  only:
    - master

# gradle을 통해 의존성 받을때 cache로 남겨두어서 이후 같은 의존성은 받지 않도록 한다.
# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master branch push시에 실행할 script
script: "./gradlew clean build"

# travis CI test

# AWS s3 deploy
before_deploy:
  - zip -r springboot-webservice *
  - mkdir -p deploy
  - mv springboot-webservice.zip deploy/springboot-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot-webservice-s3-deploy # 6-3-3에서 생성한 S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: public_read
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true
    on:
      repo: rmk1075/SpringBoot_Webservice #Github 주소
      branch: master

  - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
      bucket: springboot-webservice-s3-deploy # S3 버킷
      key: springboot-webservice.zip # 빌드 파일을 압축해서 전달
      bundle_type: zip
      application: springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
      deployment_group: springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
      region: ap-northeast-2
      wait-until-deployed: true
      on:
        repo: rmk1075/SpringBoot_Webservice
        branch: master


# Travic CI 실행 완료시 자동 알람 설정
# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - rmk1075@gmail.com